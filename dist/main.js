(()=>{var n={894:(n,e,t)=>{"use strict";t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}","",{version:3,sources:["webpack://./src/styles/cssReset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}"],sourceRoot:""}]);const c=i},383:(n,e,t)=>{"use strict";t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".d-flex {\r\n  display: flex;\r\n}\r\n  \r\n.justify-content-between {\r\n  justify-content: space-between;\r\n}\r\n\r\n.m-1 {\r\n  margin: 16px;\r\n}\r\n\r\n.my-1 {\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.mr-1 {\r\n  margin-right: 16px;\r\n}\r\n\r\n.m-2 {\r\n  margin: 8px;\r\n}\r\n\r\n.my-2 {\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.mr-2 {\r\n  margin-right: 8px;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n}\r\n\r\n.d-none {\r\n  display: none;\r\n}","",{version:3,sources:["webpack://./src/styles/helper.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf",sourcesContent:[".d-flex {\r\n  display: flex;\r\n}\r\n  \r\n.justify-content-between {\r\n  justify-content: space-between;\r\n}\r\n\r\n.m-1 {\r\n  margin: 16px;\r\n}\r\n\r\n.my-1 {\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.mr-1 {\r\n  margin-right: 16px;\r\n}\r\n\r\n.m-2 {\r\n  margin: 8px;\r\n}\r\n\r\n.my-2 {\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.mr-2 {\r\n  margin-right: 8px;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n}\r\n\r\n.d-none {\r\n  display: none;\r\n}"],sourceRoot:""}]);const c=i},890:(n,e,t)=>{"use strict";t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"h1 {\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n}\r\n\r\nh4 {\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  width: 80%;\r\n  height: 100%;\r\n  margin: auto;\r\n}\r\n\r\n.sidebar {\r\n  width: 30%;\r\n  height: 100%;\r\n  padding: 30px;\r\n  background: rgba(20, 30, 40, .4);\r\n}\r\n\r\n.content {\r\n  width: 70%;\r\n  padding: 30px;\r\n  padding-left: 60px;\r\n}\r\n\r\n.project-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 40%;\r\n  margin: 20px 0;\r\n}\r\n\r\n.task {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 55%;\r\n  margin: 20px 0;\r\n}\r\n\r\n.modal {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n  overflow: auto;\r\n  padding-top: 50px;\r\n  background: rgba(0, 0, 0, .4);\r\n}\r\n\r\n.modal .modal-content {\r\n  width: 30%;\r\n  background: white;\r\n  margin: auto;\r\n  padding: 30px;\r\n}\r\n\r\n.modal .modal-content .close {\r\n  float: right;\r\n  margin-top: -20px;\r\n}\r\n\r\n.modal .modal-content .label {\r\n  width: 80px;\r\n}","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,UAAU;EACV,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,aAAa;EACb,gCAAgC;AAClC;;AAEA;EACE,UAAU;EACV,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,UAAU;EACV,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,UAAU;EACV,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,UAAU;EACV,cAAc;EACd,iBAAiB;EACjB,6BAA6B;AAC/B;;AAEA;EACE,UAAU;EACV,iBAAiB;EACjB,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,WAAW;AACb",sourcesContent:["h1 {\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n}\r\n\r\nh4 {\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  width: 80%;\r\n  height: 100%;\r\n  margin: auto;\r\n}\r\n\r\n.sidebar {\r\n  width: 30%;\r\n  height: 100%;\r\n  padding: 30px;\r\n  background: rgba(20, 30, 40, .4);\r\n}\r\n\r\n.content {\r\n  width: 70%;\r\n  padding: 30px;\r\n  padding-left: 60px;\r\n}\r\n\r\n.project-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 40%;\r\n  margin: 20px 0;\r\n}\r\n\r\n.task {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 55%;\r\n  margin: 20px 0;\r\n}\r\n\r\n.modal {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n  overflow: auto;\r\n  padding-top: 50px;\r\n  background: rgba(0, 0, 0, .4);\r\n}\r\n\r\n.modal .modal-content {\r\n  width: 30%;\r\n  background: white;\r\n  margin: auto;\r\n  padding: 30px;\r\n}\r\n\r\n.modal .modal-content .close {\r\n  float: right;\r\n  margin-top: -20px;\r\n}\r\n\r\n.modal .modal-content .label {\r\n  width: 80px;\r\n}"],sourceRoot:""}]);const c=i},645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<n.length;l++){var u=[].concat(n[l]);r&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),e.push(u))}},e}},537:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},300:function(n,e,t){var r,o;!function(a){"use strict";var i,c=null;"object"==typeof pubsub?c=pubsub:"object"==typeof t.g&&"object"==typeof t.g.pubsubConfig&&(c=t.g.pubsubConfig),i=new function n(e){var t={},r={separator:e&&e.separator?e.separator:"/",recurrent:!(!e||"boolean"!=typeof e.recurrent)&&e.recurrent,depth:e&&"number"==typeof e.depth?e.depth:null,async:!(!e||"boolean"!=typeof e.async)&&e.async,context:e&&e.context?e.context:null,log:!(!e||!e.log)&&e.log};function o(n,e){var t=0,r=n.length;for(t=0;t<r;t++)e(t,n[t])}function a(n){return Array.isArray?Array.isArray(n):"[object Array]"===Object.prototype.toString.call(n)}function i(n,e,t){if(t="boolean"==typeof t?t:r.async,n.length){var a=n.slice();o(a,(function(n,r){"object"==typeof r&&a.hasOwnProperty(n)&&(t?setTimeout((function(){r.callback.apply(r.context,e)}),4):r.callback.apply(r.context,e))}))}}function c(n,e,t,r){var o=(t=t.slice()).shift(),a=r.depth,s=r.async,l=r.partsLength,u=r.recurrent,A=l-t.length;if(o)if(void 0!==n["*"]&&c(n["*"],e,t,r),"*"===o&&function(n,e){var t;for(t in n)"_"!==t[0]&&n.hasOwnProperty(t)&&i(n[t]._events,e)}(n,e),void 0!==n[o]){if(n=n[o],!0===u&&"number"!=typeof a){if(i(n._events,e,s),0===t.length)return}else!0===u&&"number"==typeof a&&A>=l-a&&i(n._events,e,s);c(n,e,t,r)}else r.log&&console.warn("There is no "+r.nsString+" subscription");else i(n._events,e,s)}function s(n,e,o){var a,i,c=n.split(r.separator),s=o&&void 0!==o.context?o.context:r.context,l=0;for(s||(s=e),a=t,l=0;l<c.length;l+=1)void 0===a[c[l]]&&(a[c[l]]={},a[c[l]]._events=[]),a=a[c[l]];return i={callback:e,context:s},a._events.push(i),{namespace:c.join(r.separator),event:i}}function l(n){if(null==n)return null;var e,a=n.namespace,i=n.event,c=a.split(r.separator),s=0;for(e=t,s=0;s<c.length;s+=1){if(void 0===e[c[s]])return r.log&&console.error("There is no "+a+" subscription"),null;e=e[c[s]]}o(e._events,(function(n){e._events[n]===i&&e._events.splice(n,1)}))}return{publish:function(n,e,o){var a=n.split(r.separator),i="object"==typeof o&&o.recurrent?o.recurrent:r.recurrent,s="object"==typeof o&&o.depth?o.depth:r.depth,l="object"==typeof o&&o.async?o.async:r.async,u=a.length;a.length?c(t,e,a,{recurrent:i,depth:s,async:l,parts:a,nsString:n,partsLength:u}):r.log&&console.error("Wrong namespace provided "+n)},subscribe:function(n,e,t){var r=this,i=[];if(a(e))o(e,(function(o){var a=e[o];i=i.concat(r.subscribe(n,a,t))}));else{if(!a(n))return s.apply(r,arguments);o(n,(function(o){var a=n[o];i=i.concat(r.subscribe(a,e,t))}))}return i},subscribeOnce:function(n,e,t){var r=this,o=null;return o=r.subscribe(n,(function(){var n=this;e.apply(n,arguments),r.unsubscribe(o)}),t),o},unsubscribe:function(n){var e=this;a(n)?o(n,(function(t){var r=n[t];l.apply(e,[r])})):l.apply(e,arguments)},newInstance:function(e){return new n(e)}}}(c),void 0===(o="function"==typeof(r=i)?r.call(e,t,e,n):r)||(n.exports=o),n.exports&&(n.exports=i),"object"==typeof window&&(window.pubsub=i,window!==a&&(a.pubsub=i))}(this)},379:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],l=r.base?s[0]+r.base:s[0],u=a[l]||0,A="".concat(l," ").concat(u);a[l]=u+1;var d=t(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var f=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:A,updater:f,references:1})}i.push(A)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=r(n,o),l=0;l<a.length;l++){var u=t(a[l]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}a=s}}},569:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{"use strict";n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r].call(a.exports,a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{"use strict";var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),s=t.n(c),l=t(216),u=t.n(l),A=t(589),d=t.n(A),p=t(894),f={};f.styleTagTransform=d(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=u(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;var m=t(383),b={};b.styleTagTransform=d(),b.setAttributes=s(),b.insert=i().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=u(),e()(m.Z,b),m.Z&&m.Z.locals&&m.Z.locals;var h=t(890),g={};g.styleTagTransform=d(),g.setAttributes=s(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=u(),e()(h.Z,g),h.Z&&h.Z.locals&&h.Z.locals;const y=[{title:"folan",tasks:[{title:"read a book haha",description:"this task is good for you",dueDate:"1/2/2022 08:22",priority:"high"}]}];let C=y[0];function v(){return y}function E(){return C}var x=t(300),w=t.n(x);function B(n){const e=document.querySelector("#projects-container");e.innerHTML="";for(let t of n){const n=document.createElement("div");n.classList.add("d-flex","justify-content-between","my-1"),n.addEventListener("click",(()=>{w().publish("select/project",[t])}));const r=document.createElement("h4");r.innerText=t.title;const o=document.createElement("div");o.classList.add("d-flex");const a=document.createElement("button");a.innerText="remove";const i=document.createElement("button");i.innerText="edit",o.appendChild(a),o.appendChild(i),n.appendChild(r),n.appendChild(o),e.appendChild(n)}}function k(n){const e=document.querySelector("#task-container");e.innerText="";for(let t of n){const n=document.createElement("div");n.classList.add("task");const r=document.createElement("div"),o=document.createElement("input");o.setAttribute("type","checkbox");const a=document.createElement("label");a.innerText=t.title,r.appendChild(o),r.appendChild(a);const i=document.createElement("div"),c=document.createElement("button");c.innerText="edit";const s=document.createElement("button");s.innerText="delete",i.appendChild(c),i.appendChild(s),n.appendChild(r),n.appendChild(i),e.appendChild(n)}}const{openModal:j,closeModal:T}=function(){const n=document.querySelector(".modal");return window.onclick=function(e){e.target===n&&(n.style.display="none")},{closeModal:function(){n.style.display="none"},openModal:function(){n.style.display="block"}}}(),{getTaskFormData:q,clearTaskFormData:S}=function(){const n={title:document.querySelector("#title"),description:document.querySelector("#description"),dueDate:document.querySelector("#due-date"),priority:()=>document.querySelector('input[name="priority"]:checked')};return{getTaskFormData:function(){return{title:n.title.value,description:n.description.value,dueDate:n.dueDate.value,priority:n.priority().value}},clearTaskFormData:function(){n.title.value="",n.description.value="",n.dueDate.value=""}}}(),{getProjectInputValue:U,clearProjectInputValue:Z}=function(){const n=document.querySelector("#project-input");return{getProjectInputValue:function(){return n.value},clearProjectInputValue:function(){n.value=""}}}();w().subscribe("select/project",(function(n){!function(n){C=n}(n),k(E().tasks)})),function(){const n=document.querySelector("#addProject"),e=document.querySelector(".openAddTaskModal"),t=document.querySelector("#add-task-button");n.addEventListener("click",(()=>{const n=U();n&&(function(n){y.push({title:n,tasks:[]})}(n),Z(),B(v()))})),e.addEventListener("click",j),t.addEventListener("click",(()=>{const n=q();(function(n,e){return n.push({title:e.title,description:e.description,dueDate:e.dueDate}),!0})(E().tasks,n)&&(T(),S(),k(E().tasks))}))}(),B(v()),k(v()[0].tasks)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,